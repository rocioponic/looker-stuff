# include all the views
include: "/central_dm_cert/views_cert/order_descriptors_qcommerce_cert.view.lkml"
include: "/central_dm_cert/views_cert/ratings_cert.view.lkml"
include: "/mfc_dm_cert/views_cert/mfc_store_addresses_cert.view.lkml"
include: "/partners_dm_cert/views_cert/store_addresses_cert.view.lkml"
include: "/partners_dm_cert/views_cert/stores_cert.view.lkml"
include: "/central_dm_cert/views_cert/order_pna_cert.view.lkml"
include: "/central_dm_cert/views_cert/first_orders_levels_cert.view.lkml"
include: "/central_dm_cert/views_cert/order_feedback_facts_cert.view.lkml"

explore: order_descriptors_qcommerce_cert {
  persist_with: order_descriptors_datagroup #cache policy - check datagroup definition in the model.

  always_filter: {
    filters: [order_descriptors_qcommerce_cert.p_creation_date: "365 days"] #force filter by partition key
  }

  description: "Order Descriptors table wants to have all relevant order dimensions per order_id granularity"

  join: store_addresses_cert {
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.store_address_id} = ${store_addresses_cert.pk2_store_address_id}
      AND ${store_addresses_cert.pk2_p_end_date} is Null ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2022-11-14 - We can't add store_address_id as PK"
    # }
    relationship: many_to_one
  }

  join: stores_cert {
    type: left_outer
    sql_on: ${store_addresses_cert.store_id} = ${stores_cert.pk2_store_id}
      AND ${stores_cert.pk2_p_end_date} is Null ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2023-03-01 -  pk2_p_end_date is not joined to another primary key, but
    # is needed for only loading the last update for the store."
    # }
    relationship: many_to_one
    fields: [
      stores_cert.store_vertical,
      stores_cert.store_subvertical,
      stores_cert.store_subvertical2,
      stores_cert.store_subvertical3,
      stores_cert.store_sub_business_unit,
      stores_cert.is_specialty,
      stores_cert.store_is_enabled,
      stores_cert.store_name
    ]
  }

  join: ratings_cert {
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.pk1_order_id} = ${ratings_cert.pk_order_id};;
    relationship: one_to_one
  }

  join: mfc_store_addresses_cert {
    # 2022-12-21 This makes the 10th View, but we need it to identify filter MFC stores
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.store_address_id} = ${mfc_store_addresses_cert.store_address_id}
      AND DATE(${mfc_store_addresses_cert.end_date}) >= CURRENT_DATE ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2022-12-21 - We can't add store_address_id as PK"
    # }
    fields: [
      mfc_store_addresses_cert.store_address_is_mfc
      , mfc_store_addresses_cert.mfc_name
      , mfc_store_addresses_cert.mfc_danzai_id
      , mfc_store_addresses_cert.mfc_business_id
    ]
    relationship: one_to_many
  }

  join: order_pna_cert {
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.pk1_order_id} = ${order_pna_cert.pk1_order_id}
      and ${order_descriptors_qcommerce_cert.p_creation_date} = ${order_pna_cert.p_creation_date} ;;
    relationship: one_to_one
  }

  join: first_orders_levels_cert {
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.pk1_order_id} = ${first_orders_levels_cert.pk1_order_id} ;;
    relationship: one_to_one
  }

  join: order_feedback_facts_cert {
    type: left_outer
    sql_on: ${order_descriptors_qcommerce_cert.pk1_order_id} = ${order_feedback_facts_cert.order_id};;
    # LAMS
    # rule_exemptions: {
    # E2: "2024-03-25 - order_id is not the points_postal_codes PK"
    # }
    relationship: many_to_one
  }

}
