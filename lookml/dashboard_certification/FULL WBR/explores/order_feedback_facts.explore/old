# include all the views
include: "/central_dm/views/order_descriptors.view.lkml"
include: "/central_dm/views/order_feedback_facts.view.lkml"
include: "/mfc_dm/views/mfc_store_addresses.view.lkml"
include: "/partners_dm/views/store_addresses.view.lkml"
include: "/partners_dm/views/stores.view.lkml"
include: "/partners_dm/views/daily_partner_segmentation.view.lkml"
include: "/central_dm/views/bought_products.view.lkml"

explore: order_feedback_facts {
  persist_with: order_descriptors_datagroup #cache policy - check datagroup definition in the model.
  description: "Explore to see the feedbacks of the orders"

  join: order_descriptors {
    type: left_outer
    sql_on: ${order_descriptors.pk1_order_id} = ${order_feedback_facts.order_id};;
    # LAMS
    # rule_exemptions: {
    # E2: "2022-10-06 - We can't add order_id as PK"
    # }
    relationship: many_to_one
  }

  join: store_addresses {
    type: left_outer
    sql_on: ${order_descriptors.store_address_id} = ${store_addresses.pk2_store_address_id};;
    # LAMS
    # rule_exemptions: {
    # E2: "2022-11-14 - We can't add store_address_id as PK"
    # }
    relationship: one_to_many
  }

  join: mfc_store_addresses {
    # 2022-12-21 This makes the 10th View, but we need it to identify filter MFC stores
    type: left_outer
    sql_on: ${order_descriptors.store_address_id} = ${mfc_store_addresses.store_address_id}
      AND DATE(${mfc_store_addresses.end_date}) >= CURRENT_DATE ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2022-12-21 - We can't add store_address_id as PK"
    # }
    fields: [
      mfc_store_addresses.store_address_is_mfc
      , mfc_store_addresses.mfc_name
      , mfc_store_addresses.mfc_danzai_id
      , mfc_store_addresses.mfc_business_id
    ]
    relationship: one_to_many
  }

  join: stores {
    type: left_outer
    sql_on: ${store_addresses.store_id} = ${stores.pk2_store_id}
      AND ${stores.pk2_p_end_date} is Null ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2023-03-03 -  pk2_p_end_date is not joined to another primary key, but
    # is needed for only loading the last update for the store."
    # }
    relationship: many_to_one
    fields: [
      stores.store_subvertical,
      stores.store_subvertical2,
      stores.store_subvertical3,
      stores.store_sub_business_unit,
      stores.is_specialty
    ]
  }

  join: daily_partner_segmentation {
    type: left_outer
    sql_on: ${stores.pk2_store_id} = ${daily_partner_segmentation.pk2_store_id}
      and ${stores.pk2_p_end_date} IS NOT DISTINCT FROM ${daily_partner_segmentation.pk2_p_end_date} ;;
    # LAMS
    # rule_exemptions: {
    # E2: "2023-07-18 IS NOT DISTINCT is an equality constraint, not recognized by LAMS"
    # }
    relationship: many_to_one
  }

  join: bought_products {
    type: left_outer
    # LAMS
    # rule_exemptions: {
    # E2: "2023-08-09 - bought_product_id is not a pk in the main table"
    # }
    sql_on: ${order_feedback_facts.bought_product_id} = ${bought_products.pk1_bought_product_id}
      and ${order_feedback_facts.order_id} = ${bought_products.order_id} ;;
    relationship: one_to_many
    fields: [
      bought_products.external_id,
      bought_products.name,
      bought_products.product_id
    ]
  }

}
